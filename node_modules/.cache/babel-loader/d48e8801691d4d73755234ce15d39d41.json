{"remainingRequest":"/workspace/OSAM2019MainServer/frontend/node_modules/babel-loader/lib/index.js!/workspace/OSAM2019MainServer/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace/OSAM2019MainServer/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/OSAM2019MainServer/frontend/src/editor/content/main/page/ImageUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/OSAM2019MainServer/frontend/src/editor/content/main/page/ImageUploader.vue","mtime":1571760052734},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"ImageUploader\",\n  data: function data() {\n    return {\n      imageUrl: ''\n    };\n  },\n  methods: {\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('Avatar picture must be JPG format!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('Avatar picture size can not exceed 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    }\n  }\n};",{"version":3,"sources":["ImageUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,+BACA,GADA,EACA,IADA,EACA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,KAHA;AAIA,IAAA,kBAJA,8BAIA,IAJA,EAIA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,IAAA,KAAA,YAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,CAAA;;AAEA,UAAA,CAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,oCAAA;AACA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,yCAAA;AACA;;AACA,aAAA,KAAA,IAAA,MAAA;AACA;AAfA;AAPA,CAAA","sourcesContent":["<template>\n\t<div class=\"image-uploader\">\n\t\t<el-upload\n\t\t\tclass=\"avatar-uploader\"\n\t\t\taction=\"https://jsonplaceholder.typicode.com/posts/\"\n\t\t\t:show-file-list=\"false\"\n\t\t\t:on-success=\"handleAvatarSuccess\"\n\t\t\t:before-upload=\"beforeAvatarUpload\">\n\t\t\t<img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\n\t\t\t<i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n\t\t</el-upload>\n\t</div>\n</template>\n\n<script>\n export default {\n\tname: \"ImageUploader\",\n\tdata() {\n\t\treturn {\n\t\t\timageUrl: ''\n\t\t};\n\t},\n\tmethods: {\n\t\thandleAvatarSuccess(res, file) {\n\t\t\tthis.imageUrl = URL.createObjectURL(file.raw);\n\t\t},\n\t\tbeforeAvatarUpload(file) {\n\t\t\tconst isJPG = file.type === 'image/jpeg';\n\t\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\n\t\t\tif (!isJPG) {\n\t\t\t  this.$message.error('Avatar picture must be JPG format!');\n\t\t\t}\n\t\t\tif (!isLt2M) {\n\t\t\t  this.$message.error('Avatar picture size can not exceed 2MB!');\n\t\t\t}\n\t\t\treturn isJPG && isLt2M;\n\t\t}\n\t}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\t.avatar-uploader {\n\t\tborder: 1px dashed #d9d9d9;\n\t\tborder-radius: 6px;\n\t\tcursor: pointer;\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t}\n\t.avatar-uploader:hover {\n\t\tborder-color: #409EFF;\n\t}\n\t.avatar-uploader-icon {\n\t\tfont-size: 28px;\n\t\tcolor: #8c939d;\n\t\twidth: 178px;\n\t\theight: 178px;\n\t\tline-height: 178px;\n\t\ttext-align: center;\n\t}\n\t.avatar {\n\t\twidth: 178px;\n\t\theight: 178px;\n\t\tdisplay: block;\n\t}\n</style>\n"],"sourceRoot":"src/editor/content/main/page"}]}