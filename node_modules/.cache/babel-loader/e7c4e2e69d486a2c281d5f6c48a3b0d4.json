{"remainingRequest":"/workspace/OSAM2019MainServer/frontend/node_modules/babel-loader/lib/index.js!/workspace/OSAM2019MainServer/frontend/node_modules/eslint-loader/index.js??ref--13-0!/workspace/OSAM2019MainServer/frontend/src/model/actions.js","dependencies":[{"path":"/workspace/OSAM2019MainServer/frontend/src/model/actions.js","mtime":1571807318804},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/workspace/OSAM2019MainServer/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/workspace/OSAM2019MainServer/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport default {\n  loadProfile: function () {\n    var _loadProfile = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(store) {\n      var result, data, json;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/mockup/profile.json');\n\n            case 2:\n              result = _context.sent;\n              data = result.data;\n              console.log(data);\n              json = JSON.parse(data);\n              console.log(json);\n              store.commit(\"setProfile\", json);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loadProfile(_x) {\n      return _loadProfile.apply(this, arguments);\n    }\n\n    return loadProfile;\n  }()\n};",{"version":3,"sources":["/workspace/OSAM2019MainServer/frontend/src/model/actions.js"],"names":["axios","loadProfile","store","get","result","data","console","log","json","JSON","parse","commit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACRC,EAAAA,WADQ;AAAA;AAAA;AAAA,6CACIC,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEMF,KAAK,CAACG,GAAN,CAAU,sBAAV,CAFN;;AAAA;AAETC,cAAAA,MAFS;AAITC,cAAAA,IAJS,GAIFD,MAAM,CAACC,IAJL;AAKbC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACIG,cAAAA,IANS,GAMFC,IAAI,CAACC,KAAL,CAAWL,IAAX,CANE;AASbC,cAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAN,cAAAA,KAAK,CAACS,MAAN,CAAa,YAAb,EAA2BH,IAA3B;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n\tasync loadProfile(store) {\n\t\tlet result = await axios.get('/mockup/profile.json');\n\t\t\n\t\tlet data = result.data;\n\t\tconsole.log(data);\n\t\tlet json = JSON.parse(data);\n\t\t\n\t\t\n\t\tconsole.log(json);\n\t\t\n\t\tstore.commit(\"setProfile\", json);\n\t}\n};"]}]}